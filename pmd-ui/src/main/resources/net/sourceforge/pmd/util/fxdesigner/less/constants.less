/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */

/*
  App-wide color constants and useful mixins.

  Useful resources (TODO add that to a doc page on the site):

  * Less reference (we use Less 1.7.0):
      http://lesscss.org/features/

  * JavaFX CSS reference:
      https://docs.oracle.com/javase/8/javafx/api/javafx/scene/doc-files/cssref.html

  * modena.css (base JavaFX stylesheet):
      http://hg.openjdk.java.net/openjfx/jfx-dev/rt/file/762a57e4b74a/modules/javafx.controls/src/main/resources/com/sun/javafx/scene/control/skin/modena/modena.css

  * Icon gallery:
      https://fontawesome.com/icons?d=gallery

*/

// This is repeated to use it from Less and fix the default values
// Important difference:
// * @foo is resolved at compile-time by Less
// * -foo is looked-up at runtime by the CSS engine. So it can't be used with Less
//   compile-time functions, which will fail.
@fx-base: #ececec;
@fx-text-fill: ladder(
        -fx-color,
        -fx-light-text-color 45%,
        -fx-dark-text-color 46%,
        -fx-dark-text-color 59%,
        -fx-mid-text-color 60%);

// TODO simplify that
// Base colors for background slates
@app-base-color: darken(@fx-base, 4%);
@app-darker-slate-color: darken(@fx-base, 14%);

// Darker accent colors
@darker-accent: darken(@fx-base, 10%);
@darker-accent-focus: darken(@fx-base, 23%);
// Not reserved to borders, I just ran out of names
@darker-accent-border: darken(@fx-base, 20%);

@selection-focus-color: lighten(royalblue, 20%);

@normal-font-size: 10pt;
@smaller-font-size: 9pt;

.root {

  /* A light grey that is the base color for objects.  Instead of using
   * -fx-base directly, the sections in this file will typically use -fx-color.
   */
  -fx-base: @app-base-color;
}

// mixin to fix the width of a component
.fix-width(@width) {
  -fx-pref-width: @width;
  -fx-min-width: @width;
  -fx-max-width: @width;
}

// mixin to fix the height of a component
.fix-height(@height) {
  -fx-pref-height: @height;
  -fx-min-height: @height;
  -fx-max-height: @height;
}

.force-square(@side) {
  .fix-width(@side);
  .fix-height(@side);
}

// Mixin to iterate over the range [0, @i]
// * The selector in which the mixin is called is appended with a class depth-x,
//   where x is the index of the color in the stack
// * The ruleset can access the variable @i, the current index variable
.make-depth-classes(@i, @ruleset) when (@i >= 0) {
  .make-depth-classes(@i - 1, @ruleset);

  &.depth-@{i} {
    @ruleset();
  }
}
